*PPD-Adobe: "4.3"
*% Adobe Systems PostScript(R) Printer Description File
*% Copyright 1987-1995 Adobe Systems Incorporated. 
*% All Rights Reserved. 
*% Permission is granted for redistribution of this file as
*% long as this copyright notice is intact and the contents
*% of the file is not altered in any way from its original form.
*% End of Copyright statement
*% *********
*% EFI Information Block
*%
*FileVersion: "0.1"
*%
*% *********

*FormatVersion: "4.3"
*FileVersion: "1.0"
*PCFileName: "EFAX4010.PPD"
*LanguageVersion: English
*LanguageEncoding: ISOLatin1
*Product: "(Fiery ZX DocuColor 40)"
*PSVersion: "(3010.104) 1"
*ModelName: "Fiery ZX DocuColor 40 Color Server v1.0"
*ShortNickName: "Fiery ZX DocuColor 40 v1.0"
*NickName: "Fiery ZX DocuColor 40 Color Server v1.0"
*Manufacturer: "Xerox"

*% PPD body begins

*% === Options and Constraints =========

*%EFIGroupName Job/Job :True
*%EFIGroupName Media/Media :True
*%EFIGroupName Color/Color :True
*%EFIGroupName Finishing/Finishing :True
*%EFIGroupName Notes/Notes :True
*%EFIGroupName FreeForm/FreeForm :True

*%EFIFlags *Notes1  Column
*%EFIGroup *Notes1  Notes/Notes 
*%EFIJobNote *Notes1/Notes 1 :32

*%EFIFlags *Notes2  Column
*%EFIGroup *Notes2  Notes/Notes 
*%EFIJobNote *Notes2/Notes 2 :32

*%EFIFlags *Instruct  Column
*%EFIGroup *Instruct  Notes/Notes 
*%EFIJobNote *Instruct/Instructions :128

*% Constraints on Compression and document printing 
*% (can't constraint on collate because is works with sorter...)
*UIConstraints: *EFCompression False *EFOutputOrder Reverse
*UIConstraints: *EFOutputOrder Reverse *EFCompression False

*% SlipSheet on means no Tray 3
*UIConstraints: *Slipsheet True *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *Slipsheet True

*% Slip Sheet disabled when Sorter On 
*UIConstraints: *Sorter True *Slipsheet True
*UIConstraints: *Slipsheet True *Sorter True

*% Slip Sheet disabled when stapling on
*UIConstraints: *EFStapler On *Slipsheet True
*UIConstraints: *Slipsheet True *EFStapler On

*% Stapler must be off when the job is uncollated
*UIConstraints: *EFCollate False *EFStapler On
*UIConstraints: *EFStapler On *EFCollate False

*% Stapler must be off for transparency and film
*UIConstraints: *MediaType Transparent *EFStapler On
*UIConstraints: *MediaType Interleaved *EFStapler On
*UIConstraints: *MediaType Film *EFStapler On
*UIConstraints: *EFStapler On *MediaType Transparent
*UIConstraints: *EFStapler On *MediaType Interleaved
*UIConstraints: *EFStapler On *MediaType Film

*% Constraints on MediaType with Tray1-3...................
*UIConstraints: *MediaType Thick *InputSlot Tray1
*UIConstraints: *MediaType Transparent *InputSlot Tray1
*UIConstraints: *MediaType Interleaved *InputSlot Tray1
*UIConstraints: *MediaType Film *InputSlot Tray1
*UIConstraints: *InputSlot Tray1 *MediaType Thick
*UIConstraints: *InputSlot Tray1 *MediaType Transparent
*UIConstraints: *InputSlot Tray1 *MediaType Interleaved
*UIConstraints: *InputSlot Tray1 *MediaType Film

*UIConstraints: *MediaType Thick *InputSlot Tray2
*UIConstraints: *MediaType Transparent *InputSlot Tray2
*UIConstraints: *MediaType Interleaved *InputSlot Tray2
*UIConstraints: *MediaType Film *InputSlot Tray2
*UIConstraints: *InputSlot Tray2 *MediaType Thick
*UIConstraints: *InputSlot Tray2 *MediaType Transparent
*UIConstraints: *InputSlot Tray2 *MediaType Interleaved
*UIConstraints: *InputSlot Tray2 *MediaType Film

*UIConstraints: *MediaType Thick *InputSlot Tray3
*UIConstraints: *MediaType Transparent *InputSlot Tray3
*UIConstraints: *MediaType Interleaved *InputSlot Tray3
*UIConstraints: *MediaType Film *InputSlot Tray3
*UIConstraints: *InputSlot Tray3 *MediaType Thick
*UIConstraints: *InputSlot Tray3 *MediaType Transparent
*UIConstraints: *InputSlot Tray3 *MediaType Interleaved
*UIConstraints: *InputSlot Tray3 *MediaType Film

*UIConstraints: *MediaType Thick *EFDuplex TopTop
*UIConstraints: *MediaType Thick *EFDuplex TopBot
*UIConstraints: *MediaType Transparent *EFDuplex TopTop
*UIConstraints: *MediaType Transparent *EFDuplex TopBot
*UIConstraints: *MediaType Interleaved *EFDuplex TopTop
*UIConstraints: *MediaType Interleaved *EFDuplex TopBot
*UIConstraints: *MediaType Film *EFDuplex TopTop
*UIConstraints: *MediaType Film *EFDuplex TopBot
*UIConstraints: *InputSlot TrayManual *EFDuplex TopTop
*UIConstraints: *InputSlot TrayManual *EFDuplex TopBot

*UIConstraints: *EFDuplex TopTop *MediaType Thick
*UIConstraints: *EFDuplex TopTop *MediaType Transparent
*UIConstraints: *EFDuplex TopTop *MediaType Interleaved
*UIConstraints: *EFDuplex TopTop *MediaType Film
*UIConstraints: *EFDuplex TopTop *InputSlot TrayManual
*UIConstraints: *EFDuplex TopBot *MediaType Thick
*UIConstraints: *EFDuplex TopBot *MediaType Transparent
*UIConstraints: *EFDuplex TopBot *MediaType Interleaved
*UIConstraints: *EFDuplex TopBot *MediaType Film
*UIConstraints: *EFDuplex TopBot *InputSlot TrayManual

*% Constraints for FreeForm =======================
*UIConstraints: *EFCreateMaster *EFUseMaster
*UIConstraints: *EFUseMaster *EFCreateMaster

*% ColorWise UIConstraints start here
*% TV@UIC1.0@CMYK@971202

*UIConstraints: *EFSimulation None *EFSimSpeed Quick
*UIConstraints: *EFSimSpeed Quick *EFSimulation None
*UIConstraints: *EFSimulation None *EFSimSpeed Full
*UIConstraints: *EFSimSpeed Full *EFSimulation None 
*UIConstraints: *EFSimulation MatchCopy *EFSimSpeed Quick
*UIConstraints: *EFSimSpeed Quick *EFSimulation MatchCopy
*UIConstraints: *EFSimulation MatchCopy *EFSimSpeed Full
*UIConstraints: *EFSimSpeed Full *EFSimulation MatchCopy

*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherGamma 1.0
*UIConstraints: *EFRGBOtherGamma 1.0 *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherGamma 1.2
*UIConstraints: *EFRGBOtherGamma 1.2 *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherGamma 1.4
*UIConstraints: *EFRGBOtherGamma 1.4 *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherGamma 1.6
*UIConstraints: *EFRGBOtherGamma 1.6 *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherGamma 1.8
*UIConstraints: *EFRGBOtherGamma 1.8 *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherGamma 2.0
*UIConstraints: *EFRGBOtherGamma 2.0 *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherGamma 2.2
*UIConstraints: *EFRGBOtherGamma 2.2 *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherGamma 2.4
*UIConstraints: *EFRGBOtherGamma 2.4 *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherGamma 2.6
*UIConstraints: *EFRGBOtherGamma 2.6 *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherGamma 2.8
*UIConstraints: *EFRGBOtherGamma 2.8 *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherGamma 3.0
*UIConstraints: *EFRGBOtherGamma 3.0 *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherWtPt 5000K
*UIConstraints: *EFRGBOtherWtPt 5000K *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherWtPt 5500K
*UIConstraints: *EFRGBOtherWtPt 5500K *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherWtPt 6500K
*UIConstraints: *EFRGBOtherWtPt 6500K *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherWtPt 7500K
*UIConstraints: *EFRGBOtherWtPt 7500K *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherWtPt 9300K
*UIConstraints: *EFRGBOtherWtPt 9300K *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherPhos HitachiEBU
*UIConstraints: *EFRGBOtherPhos HitachiEBU *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherPhos HitachiIkegami
*UIConstraints: *EFRGBOtherPhos HitachiIkegami *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherPhos NTSC
*UIConstraints: *EFRGBOtherPhos NTSC *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherPhos RadiusPivot
*UIConstraints: *EFRGBOtherPhos RadiusPivot *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherPhos SMPTE
*UIConstraints: *EFRGBOtherPhos SMPTE *EFRGBOverride DummyEFRGB_OR
*UIConstraints: *EFRGBOverride DummyEFRGB_OR *EFRGBOtherPhos Trinitron
*UIConstraints: *EFRGBOtherPhos Trinitron *EFRGBOverride DummyEFRGB_OR

*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherGamma 1.0
*UIConstraints: *EFRGBOtherGamma 1.0 *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherGamma 1.2
*UIConstraints: *EFRGBOtherGamma 1.2 *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherGamma 1.4
*UIConstraints: *EFRGBOtherGamma 1.4 *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherGamma 1.6
*UIConstraints: *EFRGBOtherGamma 1.6 *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherGamma 1.8
*UIConstraints: *EFRGBOtherGamma 1.8 *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherGamma 2.0
*UIConstraints: *EFRGBOtherGamma 2.0 *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherGamma 2.2
*UIConstraints: *EFRGBOtherGamma 2.2 *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherGamma 2.4
*UIConstraints: *EFRGBOtherGamma 2.4 *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherGamma 2.6
*UIConstraints: *EFRGBOtherGamma 2.6 *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherGamma 2.8
*UIConstraints: *EFRGBOtherGamma 2.8 *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherGamma 3.0
*UIConstraints: *EFRGBOtherGamma 3.0 *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherWtPt 5000K
*UIConstraints: *EFRGBOtherWtPt 5000K *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherWtPt 5500K
*UIConstraints: *EFRGBOtherWtPt 5500K *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherWtPt 6500K
*UIConstraints: *EFRGBOtherWtPt 6500K *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherWtPt 7500K
*UIConstraints: *EFRGBOtherWtPt 7500K *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherWtPt 9300K
*UIConstraints: *EFRGBOtherWtPt 9300K *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherPhos HitachiEBU
*UIConstraints: *EFRGBOtherPhos HitachiEBU *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherPhos HitachiIkegami
*UIConstraints: *EFRGBOtherPhos HitachiIkegami *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherPhos NTSC
*UIConstraints: *EFRGBOtherPhos NTSC *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherPhos RadiusPivot
*UIConstraints: *EFRGBOtherPhos RadiusPivot *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherPhos SMPTE
*UIConstraints: *EFRGBOtherPhos SMPTE *EFRGBOverride EFIRGB
*UIConstraints: *EFRGBOverride EFIRGB *EFRGBOtherPhos Trinitron
*UIConstraints: *EFRGBOtherPhos Trinitron *EFRGBOverride EFIRGB

*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherGamma 1.0
*UIConstraints: *EFRGBOtherGamma 1.0 *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherGamma 1.2
*UIConstraints: *EFRGBOtherGamma 1.2 *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherGamma 1.4
*UIConstraints: *EFRGBOtherGamma 1.4 *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherGamma 1.6
*UIConstraints: *EFRGBOtherGamma 1.6 *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherGamma 1.8
*UIConstraints: *EFRGBOtherGamma 1.8 *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherGamma 2.0
*UIConstraints: *EFRGBOtherGamma 2.0 *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherGamma 2.2
*UIConstraints: *EFRGBOtherGamma 2.2 *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherGamma 2.4
*UIConstraints: *EFRGBOtherGamma 2.4 *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherGamma 2.6
*UIConstraints: *EFRGBOtherGamma 2.6 *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherGamma 2.8
*UIConstraints: *EFRGBOtherGamma 2.8 *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherGamma 3.0
*UIConstraints: *EFRGBOtherGamma 3.0 *EFRGBOverride sRGB 
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherWtPt 5000K
*UIConstraints: *EFRGBOtherWtPt 5000K *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherWtPt 5500K
*UIConstraints: *EFRGBOtherWtPt 5500K *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherWtPt 6500K
*UIConstraints: *EFRGBOtherWtPt 6500K *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherWtPt 7500K
*UIConstraints: *EFRGBOtherWtPt 7500K *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherWtPt 9300K
*UIConstraints: *EFRGBOtherWtPt 9300K *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherPhos HitachiEBU
*UIConstraints: *EFRGBOtherPhos HitachiEBU *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherPhos HitachiIkegami
*UIConstraints: *EFRGBOtherPhos HitachiIkegami *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherPhos NTSC
*UIConstraints: *EFRGBOtherPhos NTSC *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherPhos RadiusPivot
*UIConstraints: *EFRGBOtherPhos RadiusPivot *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherPhos SMPTE
*UIConstraints: *EFRGBOtherPhos SMPTE *EFRGBOverride sRGB
*UIConstraints: *EFRGBOverride sRGB *EFRGBOtherPhos Trinitron
*UIConstraints: *EFRGBOtherPhos Trinitron *EFRGBOverride sRGB

*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherGamma 1.0
*UIConstraints: *EFRGBOtherGamma 1.0 *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherGamma 1.2
*UIConstraints: *EFRGBOtherGamma 1.2 *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherGamma 1.4
*UIConstraints: *EFRGBOtherGamma 1.4 *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherGamma 1.6
*UIConstraints: *EFRGBOtherGamma 1.6 *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherGamma 1.8
*UIConstraints: *EFRGBOtherGamma 1.8 *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherGamma 2.0
*UIConstraints: *EFRGBOtherGamma 2.0 *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherGamma 2.2
*UIConstraints: *EFRGBOtherGamma 2.2 *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherGamma 2.4
*UIConstraints: *EFRGBOtherGamma 2.4 *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherGamma 2.6
*UIConstraints: *EFRGBOtherGamma 2.6 *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherGamma 2.8
*UIConstraints: *EFRGBOtherGamma 3.0 *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherGamma 3.0
*UIConstraints: *EFRGBOtherGamma 2.8 *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherWtPt 5000K
*UIConstraints: *EFRGBOtherWtPt 5000K *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherWtPt 5500K
*UIConstraints: *EFRGBOtherWtPt 5500K *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherWtPt 6500K
*UIConstraints: *EFRGBOtherWtPt 6500K *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherWtPt 7500K
*UIConstraints: *EFRGBOtherWtPt 7500K *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherWtPt 9300K
*UIConstraints: *EFRGBOtherWtPt 9300K *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherPhos HitachiEBU
*UIConstraints: *EFRGBOtherPhos HitachiEBU *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherPhos HitachiIkegami
*UIConstraints: *EFRGBOtherPhos HitachiIkegami *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherPhos NTSC
*UIConstraints: *EFRGBOtherPhos NTSC *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherPhos RadiusPivot
*UIConstraints: *EFRGBOtherPhos RadiusPivot *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherPhos SMPTE
*UIConstraints: *EFRGBOtherPhos SMPTE *EFRGBOverride Apple13
*UIConstraints: *EFRGBOverride Apple13 *EFRGBOtherPhos Trinitron
*UIConstraints: *EFRGBOtherPhos Trinitron *EFRGBOverride Apple13

*UIConstraints: *EFRGBOverride Off *EFRGBOtherGamma 1.0
*UIConstraints: *EFRGBOtherGamma 1.0 *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherGamma 1.2
*UIConstraints: *EFRGBOtherGamma 1.2 *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherGamma 1.4
*UIConstraints: *EFRGBOtherGamma 1.4 *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherGamma 1.6
*UIConstraints: *EFRGBOtherGamma 1.6 *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherGamma 1.8
*UIConstraints: *EFRGBOtherGamma 1.8 *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherGamma 2.0
*UIConstraints: *EFRGBOtherGamma 2.0 *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherGamma 2.2
*UIConstraints: *EFRGBOtherGamma 2.2 *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherGamma 2.4
*UIConstraints: *EFRGBOtherGamma 2.4 *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherGamma 2.6
*UIConstraints: *EFRGBOtherGamma 2.6 *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherGamma 2.8
*UIConstraints: *EFRGBOtherGamma 2.8 *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherGamma 3.0
*UIConstraints: *EFRGBOtherGamma 3.0 *EFRGBOverride Off 
*UIConstraints: *EFRGBOverride Off *EFRGBOtherWtPt 5000K
*UIConstraints: *EFRGBOtherWtPt 5000K *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherWtPt 5500K
*UIConstraints: *EFRGBOtherWtPt 5500K *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherWtPt 6500K
*UIConstraints: *EFRGBOtherWtPt 6500K *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherWtPt 7500K
*UIConstraints: *EFRGBOtherWtPt 7500K *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherWtPt 9300K
*UIConstraints: *EFRGBOtherWtPt 9300K *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherPhos HitachiEBU
*UIConstraints: *EFRGBOtherPhos HitachiEBU *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherPhos HitachiIkegami
*UIConstraints: *EFRGBOtherPhos HitachiIkegami *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherPhos NTSC
*UIConstraints: *EFRGBOtherPhos NTSC *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherPhos RadiusPivot
*UIConstraints: *EFRGBOtherPhos RadiusPivot *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherPhos SMPTE
*UIConstraints: *EFRGBOtherPhos SMPTE *EFRGBOverride Off
*UIConstraints: *EFRGBOverride Off *EFRGBOtherPhos Trinitron
*UIConstraints: *EFRGBOtherPhos Trinitron *EFRGBOverride Off

*% ColorWise UIConstraints end here


*% General Information and Defaults ===============
*FreeVM: "16632226"
*VMOption None/Standard: "16632226"
*FCacheSize None: 204800
*LanguageLevel: "3"
*ColorDevice: True
*DefaultColorSpace: CMYK
*VariablePaperSize: True
*PrintPSErrors: True
*TTRasterizer: Type42
*ContoneOnly: True
*ScreenFreq: "100"
*ScreenAngle: "50"
*FileSystem: True
*?FileSystem: "
	save
	  statusdict /diskstatus known{(True)} {(False)} ifelse = flush
	restore
	"
*End
*Throughput: "40"
*Password: "0"
*ExitServer: "
   count 0 eq
   { false } { true exch startjob } ifelse
   not { (WARNING: Cannot modify initial VM.) =
            (Missing or invalid password.) =
            (Please contact the author of this software.) = flush quit
          } if
"
*End

*Reset: "
   count 0 eq
   { false } { true exch startjob } ifelse
   not { (WARNING: Cannot reset printer.) =
            (Missing or invalid password.) =
            (Please contact the author of this software.) = flush quit
          } if
   systemdict /quit get exec
   (WARNING: Printer Reset Failed.) = flush
"
*End

*DefaultResolution: 400dpi
*?Resolution: "
save
  initgraphics
  0 0 moveto currentpoint matrix defaultmatrix transform
  0 72 lineto currentpoint matrix defaultmatrix transform
  3 -1 roll sub dup mul
  3 1 roll exch sub dup mul
  add sqrt round cvi
  (          ) cvs print (dpi) = flush
restore
"
*End

*AccurateScreensSupport: True

*%EFIFlags *EFPrange Command
*%EFIGroup *EFPrange Job/Job
*OpenUIEFI *EFPrange/Page Range : PickOne
*OrderDependency: 70.0 AnySetup *EFPrange
*DefaultEFPrange: All
*EFPrange All/All: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	currentglobal true setglobal
	DriverOps /pagerange [ ] put
	setglobal "
*End
*EFPrange Even/Even: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	currentglobal true setglobal
	DriverOps /pagerange [ 1 1000 { dup 2 add } repeat ] put
	setglobal "
*End
*EFPrange Odd/Odd: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	currentglobal true setglobal
	DriverOps /pagerange [ 0 1000 { dup 2 add } repeat ] put
	setglobal "
*End
*EFPrange range1/1-3, 5, 7: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	currentglobal true setglobal
	DriverOps /pagerange [ 0 1 2 4 6 ] put
	setglobal "
*End
*CloseUIEFI: *EFPrange

*%EFIFlags *EFScale Command|Rerip
*%EFIGroup *EFScale Job/Job
*OpenUIEFI *EFScale/Scale : PickOne
*OrderDependency: 80.0 AnySetup *EFScale
*DefaultEFScale: 100
*EFScale 200/200%: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	DriverOps /scale# 2 put << >> setpagedevice "
*End
*EFScale 150/150%: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	DriverOps /scale# 1.5 put << >> setpagedevice "
*End
*EFScale 100/100%: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	DriverOps /scale# 1 put << >> setpagedevice "
*End
*EFScale 75/75%: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	DriverOps /scale# .75 put << >> setpagedevice "
*End
*EFScale 50/50%: " userdict /DriverOps known not { /DriverOps /ProcSet findresource pop } if
	DriverOps /scale# .5 put << >> setpagedevice "
*End
*CloseUIEFI: *EFScale


*%EFIFlags *FRAME_MODE Setup
*OpenUIEFI *FRAME_MODE/Compression :PickOne
*OrderDependency: 05.0 AnySetup *FRAME_MODE
*DefaultFRAME_MODE: AREND
*FRAME_MODE AREND/On: ""
*FRAME_MODE ADOBE/Off: ""
*CloseUIEFI: *FRAME_MODE


*%EFIFlags *EFCompression Spooler|Command|Column|Rerip
*%EFIGroup *EFCompression Job/Job
*OpenUI *EFCompression/Compression :PickOne
*OrderDependency: 05.0 AnySetup *EFCompression
*DefaultEFCompression: SCDefault
*EFCompression SCDefault/Printer's Default: ""
*%DefaultEFCompression: True
*EFCompression False/Off: " userdict /XJXsetRenderType known
	{ (ADOBE) XJXsetRenderType }
	if "
*End
*EFCompression True/On: " userdict /XJXsetRenderType known
	{ (AREND) XJXsetRenderType }
	if "
*End
*?EFCompression: "(True) = flush"
*CloseUI: *EFCompression

*%EFIFlags *EFCreateMaster Spooler|Command|Column|Rerip
*%EFIGroup *EFCreateMaster  FreeForm/FreeForm
*OpenUI *EFCreateMaster/Create Master :PickOne
*OrderDependency: 57.0 AnySetup *EFCreateMaster
*DefaultEFCreateMaster: None
*EFCreateMaster None/None: ""
*EFCreateMaster formC1/1: " 1 /EFI_CODEV /ProcSet findresource dup
	/EfiCreateMaster known {/EfiCreateMaster
	 get exec} { pop } ifelse"
*End
*EFCreateMaster formC2/2: " 2 /EFI_CODEV /ProcSet findresource dup
	/EfiCreateMaster known {/EfiCreateMaster
	 get exec} { pop } ifelse"
*End
*EFCreateMaster formC3/3: " 3 /EFI_CODEV /ProcSet findresource dup
	/EfiCreateMaster known {/EfiCreateMaster
	 get exec} { pop } ifelse"
*End
*EFCreateMaster formC4/4: " 4 /EFI_CODEV /ProcSet findresource dup
	/EfiCreateMaster known {/EfiCreateMaster
	 get exec} { pop } ifelse"
*End
*EFCreateMaster formC5/5: " 5 /EFI_CODEV /ProcSet findresource dup
	/EfiCreateMaster known {/EfiCreateMaster
	 get exec} { pop } ifelse"
*End
*EFCreateMaster formC6/6: " 6 /EFI_CODEV /ProcSet findresource dup
	/EfiCreateMaster known {/EfiCreateMaster
	 get exec} { pop } ifelse"
*End
*EFCreateMaster formC7/7: " 7 /EFI_CODEV /ProcSet findresource dup
	/EfiCreateMaster known {/EfiCreateMaster
	 get exec} { pop } ifelse"
*End
*EFCreateMaster formC8/8: " 8 /EFI_CODEV /ProcSet findresource dup
	/EfiCreateMaster known {/EfiCreateMaster
	 get exec} { pop } ifelse"
*End
*EFCreateMaster formC9/9: " 9 /EFI_CODEV /ProcSet findresource dup
	/EfiCreateMaster known {/EfiCreateMaster
	 get exec} { pop } ifelse"
*End
*EFCreateMaster formC10/10: " 10 /EFI_CODEV /ProcSet findresource dup
	/EfiCreateMaster known {/EfiCreateMaster
	 get exec} { pop } ifelse"
*End
*EFCreateMaster formC11/11: " 11 /EFI_CODEV /ProcSet findresource dup
	/EfiCreateMaster known {/EfiCreateMaster
	 get exec} { pop } ifelse"
*End
*EFCreateMaster formC12/12: " 12 /EFI_CODEV /ProcSet findresource dup
	/EfiCreateMaster known {/EfiCreateMaster
	 get exec} { pop } ifelse"
*End
*EFCreateMaster formC13/13: " 13 /EFI_CODEV /ProcSet findresource dup
	/EfiCreateMaster known {/EfiCreateMaster
	 get exec} { pop } ifelse"
*End
*EFCreateMaster formC14/14: " 14 /EFI_CODEV /ProcSet findresource dup
	/EfiCreateMaster known {/EfiCreateMaster
	 get exec} { pop } ifelse"
*End
*EFCreateMaster formC15/15: " 15 /EFI_CODEV /ProcSet findresource dup
	/EfiCreateMaster known {/EfiCreateMaster
	 get exec} { pop } ifelse"
*End
*CloseUI: *EFCreateMaster

*%EFIFlags *EFUseMaster Spooler|Command|Column|Rerip
*%EFIGroup *EFUseMaster  FreeForm/FreeForm
*OpenUI *EFUseMaster/Use Master :PickOne
*OrderDependency: 57.0 AnySetup *EFUseMaster
*DefaultEFUseMaster: None
*EFUseMaster None/None: ""
*EFUseMaster formU1/1: " 1 /EFI_CODEV /ProcSet findresource dup /EfiUseMaster
	known {/EfiUseMaster get exec
	} { pop } ifelse"
*End
*EFUseMaster formU2/2: " 2 /EFI_CODEV /ProcSet findresource dup /EfiUseMaster
	known {/EfiUseMaster get exec
	} { pop } ifelse"
*End
*EFUseMaster formU3/3: " 3 /EFI_CODEV /ProcSet findresource dup /EfiUseMaster
	known {/EfiUseMaster get exec
	} { pop } ifelse"
*End
*EFUseMaster formU4/4: " 4 /EFI_CODEV /ProcSet findresource dup /EfiUseMaster
	known {/EfiUseMaster get exec
	} { pop } ifelse"
*End
*EFUseMaster formU5/5: " 5 /EFI_CODEV /ProcSet findresource dup /EfiUseMaster
	known {/EfiUseMaster get exec
	} { pop } ifelse"
*End
*EFUseMaster formU6/6: " 6 /EFI_CODEV /ProcSet findresource dup /EfiUseMaster
	known {/EfiUseMaster get exec
	} { pop } ifelse"
*End
*EFUseMaster formU7/7: " 7 /EFI_CODEV /ProcSet findresource dup /EfiUseMaster
	known {/EfiUseMaster get exec
	} { pop } ifelse"
*End
*EFUseMaster formU8/8: " 8 /EFI_CODEV /ProcSet findresource dup /EfiUseMaster
	known {/EfiUseMaster get exec
	} { pop } ifelse"
*End
*EFUseMaster formU9/9: " 9 /EFI_CODEV /ProcSet findresource dup /EfiUseMaster
	known {/EfiUseMaster get exec
	} { pop } ifelse"
*End
*EFUseMaster formU10/10: " 10 /EFI_CODEV /ProcSet findresource dup /EfiUseMaster
	known {/EfiUseMaster get exec
	} { pop } ifelse"
*End
*EFUseMaster formU11/11: " 11 /EFI_CODEV /ProcSet findresource dup /EfiUseMaster
	known {/EfiUseMaster get exec
	} { pop } ifelse"
*End
*EFUseMaster formU12/12: " 12 /EFI_CODEV /ProcSet findresource dup /EfiUseMaster
	known {/EfiUseMaster get exec
	} { pop } ifelse"
*End
*EFUseMaster formU13/13: " 13 /EFI_CODEV /ProcSet findresource dup /EfiUseMaster
	known {/EfiUseMaster get exec
	} { pop } ifelse"
*End
*EFUseMaster formU14/14: " 14 /EFI_CODEV /ProcSet findresource dup /EfiUseMaster
	known {/EfiUseMaster get exec
	} { pop } ifelse"
*End
*EFUseMaster formU15/15: " 15 /EFI_CODEV /ProcSet findresource dup /EfiUseMaster
	known {/EfiUseMaster get exec
	} { pop } ifelse"
*End
*CloseUI: *EFUseMaster

*%EFIFlags *EFCollate Spooler|Command|Column
*%EFIGroup *EFCollate  Finishing/Finishing
*OpenUI *EFCollate/Collation : Boolean
*OrderDependency: 50.0 AnySetup *EFCollate
*DefaultEFCollate: True
*EFCollate True/Collated:    "<< /Collate true>> setpagedevice"
*EFCollate False/Uncollated: "<< /Collate false>> setpagedevice"
*?EFCollate: "{currentpagedevice /Collate get } stopped { (False) } 
	     { {(True)} {(False)} ifelse } ifelse = flush"
*End
*CloseUI: *EFCollate

*%EFIFlags *EFOutputOrder  Spooler|Command|Column
*%EFIGroup *EFOutputOrder  Finishing/Finishing
*OpenUI *EFOutputOrder/Page Order :PickOne
*OrderDependency: 12.0 AnySetup *EFOutputOrder
*DefaultEFOutputOrder: Reverse
*EFOutputOrder Normal/Forward:" userdict /XJXsetprintorder known
    { 0 XJXsetprintorder }
    if "
*End
*EFOutputOrder Reverse/Reverse:" userdict /XJXsetprintorder known
    { 1 XJXsetprintorder }
    if "
*End
*CloseUI: *EFOutputOrder

*%EFIFlags *EFDuplex Spooler|Command|Column|Rerip
*%EFIGroup *EFDuplex  Finishing/Finishing
*OpenUI *EFDuplex/Duplex :PickOne
*OrderDependency: 50.0 AnySetup *EFDuplex
*DefaultEFDuplex: False
*EFDuplex False/Off: "<< /Duplex false /Policies << /Duplex 1 >> >> setpagedevice"
*EFDuplex TopTop/Top-Top: "
 << /Duplex true /Policies << /Duplex 0 >> /Tumble false >> setpagedevice "
*End
*EFDuplex TopBot/Top-Bottom: "
 << /Duplex true /Policies << /Duplex 0 >> /Tumble true >> setpagedevice "
*End
*?EFDuplex: "{currentpagedevice /Duplex get } stopped { (False) } 
	     { {(True)} {(False)} ifelse } ifelse = flush"
*End
*CloseUI: *EFDuplex

*%EFIFlags *Slipsheet  Spooler|Command|Column
*%EFIGroup *Slipsheet  Finishing/Finishing
*OpenUI *Slipsheet/Slip Sheet :Boolean
*OrderDependency: 12.0 AnySetup *Slipsheet
*DefaultSlipsheet: False
*Slipsheet True/On:" userdict /XJXsetSlipSheet known 
	{ 1 XJXsetSlipSheet } 
	if "
*End
*Slipsheet False/Off:" userdict /XJXsetSlipSheet known 
	{ 0 XJXsetSlipSheet } 
	if "
*End
*CloseUI: *Slipsheet

*%EFIFlags *Sorter Command|Column
*%EFIGroup *Sorter  Finishing/Finishing
*OpenUI *Sorter/Sorter : PickOne
*OrderDependency: 40.0 AnySetup *Sorter
*DefaultSorter: False
*Sorter False/Off: " userdict /XJXsetsorter known
	{ 0 XJXsetsorter }
	if "
*End
*Sorter True/On: " userdict /XJXsetsorter known
	{ 1 XJXsetsorter }
	if "
*End
*CloseUI: *Sorter

*%EFIFlags *EFStapler Command|Column
*%EFIGroup *EFStapler  Finishing/Finishing
*OpenUI *EFStapler/Stapler :PickOne
*OrderDependency: 40.0 AnySetup *EFStapler
*DefaultEFStapler: Off
*EFStapler Off/Off: " userdict /XJXsetstapler known
	{ 0 XJXsetstapler }
	if "
*End
*EFStapler On/On:  " userdict /XJXsetstapler known
	{ 1 XJXsetstapler }
	if "
*End
*CloseUI: *EFStapler

*%EFIFlags *EFCopierMode Command
*%EFIGroup *EFCopierMode Color/Color
*OpenUI *EFCopierMode/Copier Mode :PickOne
*OrderDependency: 40.0 AnySetup *EFCopierMode
*DefaultEFCopierMode: TextInh
*EFCopierMode TextInh/Text Enhancement: " userdict /XJXsetmapmode known 
	{ 2 XJXsetmapmode } 
	if "
*End
*EFCopierMode Photo/Photo: " userdict /XJXsetmapmode known
	{ 0 XJXsetmapmode }
	if "
*End
*EFCopierMode Map/Map: " userdict /XJXsetmapmode known
	{ 1 XJXsetmapmode }
	if "
*End
*CloseUI: *EFCopierMode

*%EFIFlags *ColorModel Command|Rerip
*%EFIGroup *ColorModel Color/Color
*OpenUI *ColorModel/Color Mode :PickOne
*OrderDependency: 15.0 AnySetup *ColorModel 
*DefaultColorModel: CMYK
*ColorModel CMYK/CMYK: "userdict /XJXsetcolormode known
        { (CMYK) XJXsetcolormode }
	{ << /ProcessColorModel /DeviceCMYK >> setpagedevice } ifelse "
*End
*ColorModel Gray/Grayscale: "userdict /XJXsetcolormode known
	{ (Grayscale) XJXsetcolormode }
	{ << /ProcessColorModel /DeviceGray >> setpagedevice } ifelse "
*End
*?ColorModel: " currentpagedevice /ProcessColorModel get /DeviceCMYK eq {(CMYK)}{(Gray)} ifelse == "
*CloseUI: *ColorModel

*%EFIFlags *EFOverprint Command|Rerip
*%EFIGroup *EFOverprint Color/Color
*OpenUI *EFOverprint/Combine Separations :Boolean
*OrderDependency: 40.0 AnySetup *EFOverprint
*DefaultEFOverprint: False
*EFOverprint True/On: " userdict /XJXsetoverprint known 
	{ 1 XJXsetoverprint } 
	if "
*End
*EFOverprint False/Off: " userdict /XJXsetoverprint known 
	{ 0 XJXsetoverprint } 
	if "
*End
*CloseUI: *EFOverprint

*%EFIFlags *DEFPAPERSIZE Setup
*OpenUIEFI *DEFPAPERSIZE/Default Paper Sizes :PickOne
*OrderDependency: 20.0 AnySetup *DEFPAPERSIZE
*DefaultDEFPAPERSIZE: US
*DEFPAPERSIZE US/US: ""
*DEFPAPERSIZE Metric/Metric: ""
*CloseUIEFI: *DEFPAPERSIZE 

*%EFIFlags *CONVPAPERSIZE Setup
*OpenUIEFI *CONVPAPERSIZE/Convert Paper Sizes : PickOne
*OrderDependency: 25.0 AnySetup *CONVPAPERSIZE
*DefaultCONVPAPERSIZE: False
*CONVPAPERSIZE False/No: ""
*CONVPAPERSIZE LetterToA4/Letter/11x17->A4/A3: ""
*CONVPAPERSIZE A4ToLetter/A4/A3->Letter/11x17: ""
*CloseUIEFI: *CONVPAPERSIZE

*%EFIFlags *COVPGATEND Setup
*OpenUIEFI *COVPGATEND/Print Cover Page : PickOne
*OrderDependency: 30.0 AnySetup *COVPGATEND
*DefaultCOVPGATEND: NO
*COVPGATEND YES/Yes: ""
*COVPGATEND NO/No: ""
*CloseUIEFI: *COVPGATEND

*%EFIFlags *COURIERSUBST Setup
*OpenUIEFI *COURIERSUBST/Allow Courier       Substitution :PickOne
*OrderDependency: 35.0 AnySetup *COURIERSUBST
*DefaultCOURIERSUBST: YES
*COURIERSUBST YES/Yes: ""
*COURIERSUBST NO/No: ""
*CloseUIEFI: *COURIERSUBST 

*%EFIFlags *PSERROR Setup
*OpenUIEFI *PSERROR/Print to PS Error : PickOne
*OrderDependency: 40.0 AnySetup *PSERROR
*DefaultPSERROR: NO
*PSERROR YES/Yes: ""
*PSERROR NO/No: ""
*CloseUIEFI: *PSERROR

*%EFIFlags *EFUseBypassTray Setup
*OpenUIEFI *EFUseBypassTray/Enable Bypass Tray  as default : PickOne
*OrderDependency: 20.0 AnySetup *EFUseBypassTray
*DefaultEFUseBypassTray: NO
*EFUseBypassTray YES/Yes: ""
*EFUseBypassTray NO/No: ""
*CloseUIEFI: *EFUseBypassTray

*%EFIFlags *DefChkHPBlack Setup
*OpenUIEFI *DefChkHPBlack/Detect Black as     default : PickOne
*OrderDependency: 21.0 AnySetup *DefChkHPBlack
*DefaultDefChkHPBlack: YES
*DefChkHPBlack YES/Yes: ""
*DefChkHPBlack NO/No: ""
*CloseUIEFI: *DefChkHPBlack

*%EFIFlags *MediaType Spooler|Command|Column|Rerip
*%EFIGroup *MediaType  Media/Media
*OpenUI *MediaType/Media Type :PickOne
*OrderDependency: 50.0 AnySetup *MediaType
*DefaultMediaType: Plain
*MediaType Plain/Plain Paper:  " userdict /XJXsetmediatype known
	{ 1 XJXsetmediatype } if"
*End
*MediaType Thick/Thick Paper:  " userdict /XJXsetmediatype known
	{ 2 XJXsetmediatype } if"
*End
*MediaType Transparent/Transparency: " userdict /XJXsetmediatype known
	{ 3 XJXsetmediatype } if"
*End
*MediaType Interleaved/Interleaved: " userdict /XJXsetmediatype known
	{ 4 XJXsetmediatype  } if"
*End
*MediaType Film/Opaque Film:	" userdict /XJXsetmediatype known
	{ 5 XJXsetmediatype } if"
*End
*?MediaType: " FieryXJdict /CB_GetMediaType known { 
    FieryXJdict /CB_GetMediaType get exec == } if"
*End
*CloseUI: *MediaType

*%EFIFlags *EFColorRendDict Spooler|Command|Rerip
*%EFIGroup *EFColorRendDict Color/Color
*OpenUI *EFColorRendDict/Rendering Style :PickOne
*OrderDependency: 60.0 AnySetup *EFColorRendDict
*DefaultEFColorRendDict: Presentation
*EFColorRendDict Photographic/Photographic: " userdict /XJXsetrenderingintent known
	{ (Photographic) XJXsetrenderingintent } if "
*End
*EFColorRendDict Presentation/Presentation: " userdict /XJXsetrenderingintent known
	{ (Presentation) XJXsetrenderingintent } if "
*End
*EFColorRendDict Solid/Solid Color:         " userdict /XJXsetrenderingintent known
	{ (Solid)  XJXsetrenderingintent } if "
*End
*EFColorRendDict None/None: ""
*?EFColorRendDict: " FieryXJdict /CB_GetRenderingIntent known { 
    FieryXJdict /CB_GetRenderingIntent get exec == } if"
*End
*CloseUI: *EFColorRendDict

*% ColorWise body starts here
*% TV@B1.0@CMYK@971217

*%EFIFlags *EFBrightness Spooler|Command|Rerip
*%EFIGroup *EFBrightness  Color/Color
*OpenUI *EFBrightness/Brightness :PickOne
*OrderDependency: 55.0 AnySetup *EFBrightness
*DefaultEFBrightness: 00.00
*EFBrightness +0.24/85%  Lightest: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetLightestColAdj known {
           userdict /EFIColordict get /SetLightestColAdj get exec
        } if } if "
*End
*EFBrightness +0.16/90%  Lighter:       " userdict /EFIColordict known {
        userdict /EFIColordict get /SetLighterColAdj known {
           userdict /EFIColordict get /SetLighterColAdj get exec
        } if } if "
*End
*EFBrightness +0.08/95%  Light:         " userdict /EFIColordict known {
        userdict /EFIColordict get /SetLightColAdj known {
           userdict /EFIColordict get /SetLightColAdj get exec
        } if } if "
*End
*EFBrightness 00.00/100% Normal:        " userdict /EFIColordict known {
        userdict /EFIColordict get /SetNormalColAdj known {
           userdict /EFIColordict get /SetNormalColAdj get exec
        } if } if "
*End
*EFBrightness -0.08/105% Dark:  " userdict /EFIColordict known {
        userdict /EFIColordict get /SetDarkColAdj known {
           userdict /EFIColordict get /SetDarkColAdj get exec
        } if } if "
*End
*EFBrightness -0.16/110% Darker:        " userdict /EFIColordict known {
        userdict /EFIColordict get /SetDarkerColAdj known {
           userdict /EFIColordict get /SetDarkerColAdj get exec
        } if } if "
*End
*EFBrightness -0.24/115% Darkest:       " userdict /EFIColordict known {
        userdict /EFIColordict get /SetDarkestColAdj known {
           userdict /EFIColordict get /SetDarkestColAdj get exec
        } if } if "
*End
*CloseUI: *EFBrightness


*%EFIFlags *EFRGBOverride Spooler|Command|Rerip|ColorSetup
*%EFIGroup *EFRGBOverride  Color/Color
*OpenUI *EFRGBOverride/RGB Source :PickOne
*OrderDependency: 56.0 AnySetup *EFRGBOverride
*DefaultEFRGBOverride: DummyEFRGB_OR
*EFRGBOverride DummyEFRGB_OR/Printer's default: ""
*EFRGBOverride EFIRGB/EFIRGB: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBColorSpaceBypass known {
           (EFIRGB) userdict /EFIColordict get /SetRGBColorSpaceBypass get exec
        } if } if "
*End
*EFRGBOverride sRGB/sRGB (PC): " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBColorSpaceBypass known {
           (SRGB) userdict /EFIColordict get /SetRGBColorSpaceBypass get exec
        } if } if "
*End
*EFRGBOverride Apple13/Apple Standard: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBColorSpaceBypass known {
           (APPLE13) userdict /EFIColordict get /SetRGBColorSpaceBypass get exec
        } if } if "
*End
*EFRGBOverride Other/Other: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBColorSpaceBypass known {
           (OTHER) userdict /EFIColordict get /SetRGBColorSpaceBypass get exec
        } if } if "
*End
*EFRGBOverride Off/Off: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBColorSpaceBypass known {
           null userdict /EFIColordict get /SetRGBColorSpaceBypass get exec
        } if } if "
*End
*CloseUI: *EFRGBOverride


*%EFIFlags *EFRGBOtherGamma Spooler|Command|Rerip|ColorSetup
*%EFIGroup *EFRGBOtherGamma  Color/Color
*OpenUI *EFRGBOtherGamma/(Other) Gamma :PickOne
*OrderDependency: 56.1 AnySetup *EFRGBOtherGamma
*DefaultEFRGBOtherGamma: DummyEFRGB_OG
*EFRGBOtherGamma DummyEFRGB_OG/Printer's default: ""
*EFRGBOtherGamma 1.0/1.0: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherGamma known {
          (1.0) userdict /EFIColordict get /SetRGBOtherGamma get exec
        } if } if "
*End
*EFRGBOtherGamma 1.2/1.2: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherGamma known {
          (1.2) userdict /EFIColordict get /SetRGBOtherGamma get exec
        } if } if "
*End
*EFRGBOtherGamma 1.4/1.4: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherGamma known {
          (1.4) userdict /EFIColordict get /SetRGBOtherGamma get exec
        } if } if "
*End
*EFRGBOtherGamma 1.6/1.6: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherGamma known {
          (1.6) userdict /EFIColordict get /SetRGBOtherGamma get exec
        } if } if "
*End
*EFRGBOtherGamma 1.8/1.8: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherGamma known {
          (1.8) userdict /EFIColordict get /SetRGBOtherGamma get exec
        } if } if "
*End
*EFRGBOtherGamma 2.0/2.0: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherGamma known {
          (2.0) userdict /EFIColordict get /SetRGBOtherGamma get exec
        } if } if "
*End
*EFRGBOtherGamma 2.2/2.2: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherGamma known {
          (2.2) userdict /EFIColordict get /SetRGBOtherGamma get exec
        } if } if "
*End
*EFRGBOtherGamma 2.4/2.4: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherGamma known {
          (2.4) userdict /EFIColordict get /SetRGBOtherGamma get exec
        } if } if "
*End
*EFRGBOtherGamma 2.6/2.6: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherGamma known {
          (2.6) userdict /EFIColordict get /SetRGBOtherGamma get exec
        } if } if "
*End
*EFRGBOtherGamma 2.8/2.8: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherGamma known {
          (2.8) userdict /EFIColordict get /SetRGBOtherGamma get exec
        } if } if "
*End
*EFRGBOtherGamma 3.0/3.0: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherGamma known {
          (3.0) userdict /EFIColordict get /SetRGBOtherGamma get exec
        } if } if "
*End
*CloseUI: *EFRGBOtherGamma


*%EFIFlags *EFRGBOtherWtPt Spooler|Command|Rerip|ColorSetup
*%EFIGroup *EFRGBOtherWtPt  Color/Color
*OpenUI *EFRGBOtherWtPt/(Other) White Point :PickOne
*OrderDependency: 56.2 AnySetup *EFRGBOtherWtPt
*DefaultEFRGBOtherWtPt: DummyEFRGB_OW
*EFRGBOtherWtPt DummyEFRGB_OW/Printer's default: ""
*EFRGBOtherWtPt 5000K/5000 K (D50): " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherWhitePoint known {
          (5000K) userdict /EFIColordict get /SetRGBOtherWhitePoint get exec
        } if } if "
*End
*EFRGBOtherWtPt 5500K/5500 K: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherWhitePoint known {
          (5500K) userdict /EFIColordict get /SetRGBOtherWhitePoint get exec
        } if } if "
*End
*EFRGBOtherWtPt 6500K/6500 K (D65): " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherWhitePoint known {
          (6500K) userdict /EFIColordict get /SetRGBOtherWhitePoint get exec
        } if } if "
*End
*EFRGBOtherWtPt 7500K/7500 K: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherWhitePoint known {
          (7500K) userdict /EFIColordict get /SetRGBOtherWhitePoint get exec
        } if } if "
*End
*EFRGBOtherWtPt 9300K/9300 K: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherWhitePoint known {
          (9300K) userdict /EFIColordict get /SetRGBOtherWhitePoint get exec
        } if } if "
*End
*CloseUI: *EFRGBOtherWtPt


*%EFIFlags *EFRGBOtherPhos Spooler|Command|Rerip|ColorSetup
*%EFIGroup *EFRGBOtherPhos  Color/Color
*OpenUI *EFRGBOtherPhos/(Other) Phosphors :PickOne
*OrderDependency: 56.3 AnySetup *EFRGBOtherPhos
*DefaultEFRGBOtherPhos: DummyEFRGB_OP
*EFRGBOtherPhos DummyEFRGB_OP/Printer's default: ""
*EFRGBOtherPhos HitachiEBU/Hitachi EBU: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherPhosphors known {
          (Hitachi EBU) userdict /EFIColordict get /SetRGBOtherPhosphors get exec
        } if } if "
*End
*EFRGBOtherPhos HitachiIkegami/Hitachi/Ikegami: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherPhosphors known {
          (Hitachi/Ikegami) userdict /EFIColordict get /SetRGBOtherPhosphors get exec
        } if } if "
*End
*EFRGBOtherPhos NTSC/NTSC: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherPhosphors known {
          (NTSC) userdict /EFIColordict get /SetRGBOtherPhosphors get exec
        } if } if "
*End
*EFRGBOtherPhos RadiusPivot/Radius Pivot: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherPhosphors known {
          (Radius Pivot) userdict /EFIColordict get /SetRGBOtherPhosphors get exec
        } if } if "
*End
*EFRGBOtherPhos SMPTE/SMPTE: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherPhosphors known {
          (SMPTE) userdict /EFIColordict get /SetRGBOtherPhosphors get exec
        } if } if "
*End
*EFRGBOtherPhos Trinitron/Trinitron: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetRGBOtherPhosphors known {
          (Trinitron) userdict /EFIColordict get /SetRGBOtherPhosphors get exec
        } if } if "
*End
*CloseUI: *EFRGBOtherPhos


*%EFIFlags *EFSimulation Spooler|Command|Rerip|ColorSetup
*%EFIGroup *EFSimulation Color/Color
*OpenUI *EFSimulation/CMYK Simulation :PickOne
*OrderDependency: 57.0 AnySetup *EFSimulation
*DefaultEFSimulation: EFSimulationDEF
*EFSimulation EFSimulationDEF/Printer's default: ""
*EFSimulation SWOP/SWOP-Coated: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetCMYKSimulation known {
           (SWOP-Coated) userdict /EFIColordict get /SetCMYKSimulation get exec
        } if } if "
*End
*EFSimulation DIC/DIC: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetCMYKSimulation known {
           (DIC) userdict /EFIColordict get /SetCMYKSimulation get exec
        } if } if "
*End
*EFSimulation Euroscale/Euroscale: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetCMYKSimulation known {
           (Euroscale) userdict /EFIColordict get /SetCMYKSimulation get exec
        } if } if "
*End
*EFSimulation Custom1/Custom-1: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetCMYKSimulation known {
           (Custom-1) userdict /EFIColordict get /SetCMYKSimulation get exec
        } if } if "
*End
*EFSimulation Custom2/Custom-2: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetCMYKSimulation known {
           (Custom-2) userdict /EFIColordict get /SetCMYKSimulation get exec
        } if } if "
*End
*EFSimulation Custom3/Custom-3: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetCMYKSimulation known {
           (Custom-3) userdict /EFIColordict get /SetCMYKSimulation get exec
        } if } if "
*End
*EFSimulation Custom4/Custom-4: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetCMYKSimulation known {
           (Custom-4) userdict /EFIColordict get /SetCMYKSimulation get exec
        } if } if "
*End
*EFSimulation Custom5/Custom-5: " userdict /EFIColordict known {
        userdict /EFIColordict get /SetCMYKSimulation known {
           (Custom-5) userdict /EFIColordict get /SetCMYKSimulation get exec
        } if } if "
*End
*EFSimulation None/None: " userdict /EFIColordict known { 
        userdict /EFIColordict get /SetCMYKSimulation known {
           (.None) userdict /EFIColordict get /SetCMYKSimulation get exec
        } if } if "
*End
*EFSimulation MatchCopy/Match Copy: " userdict /EFIColordict known { 
        userdict /EFIColordict get /SetCMYKSimulation known {
           (.MatchCopy) userdict /EFIColordict get /SetCMYKSimulation get exec
        } if } if "
*End
*CloseUI: *EFSimulation


*%EFIFlags *EFSimSpeed Spooler|Command|Rerip|ColorSetup
*%EFIGroup *EFSimSpeed  Color/Color
*OpenUI *EFSimSpeed/CMYK Simulation Method :PickOne
*OrderDependency: 58.0 AnySetup *EFSimSpeed
*DefaultEFSimSpeed: EFSimSpeedDEF
*EFSimSpeed EFSimSpeedDEF/Printer's default: ""
*EFSimSpeed Quick/Quick: " userdict /EFIColordict known { 
        userdict /EFIColordict get /SetFastSimulationSpeed known {
           userdict /EFIColordict get /SetFastSimulationSpeed get exec
        } if } if "
*End
*EFSimSpeed Full/Full: " userdict /EFIColordict known { 
        userdict /EFIColordict get /SetSlowSimulationSpeed known {
           userdict /EFIColordict get /SetSlowSimulationSpeed get exec
        } if } if "
*End
*CloseUI: *EFSimSpeed


*%EFIFlags *EFPureBlack Spooler|Command|Rerip|ColorSetup
*%EFIGroup *EFPureBlack  Color/Color
*OpenUI *EFPureBlack/Pure Black Text/Graphics :PickOne
*OrderDependency: 59.0 AnySetup *EFPureBlack
*DefaultEFPureBlack: EFPureBlackDEF
*EFPureBlack EFPureBlackDEF/Printer's default: ""
*EFPureBlack False/Off: " userdict /EFIColordict known {
        userdict /EFIColordict get /DisablePureBlack known {
           userdict /EFIColordict get /DisablePureBlack get exec
        } if } if "
*End
*EFPureBlack True/On: " userdict /EFIColordict known {
        userdict /EFIColordict get /EnablePureBlack known {
           userdict /EFIColordict get /EnablePureBlack get exec
        } if } if "
*End
*CloseUI: *EFPureBlack


*%EFIFlags *EFBlkOverprint Spooler|Command|Rerip|ColorSetup
*%EFIGroup *EFBlkOverprint  Color/Color
*OpenUI *EFBlkOverprint/Black Overprint :PickOne
*OrderDependency: 60.0 AnySetup *EFBlkOverprint
*DefaultEFBlkOverprint: EFBlkOverprintDEF
*EFBlkOverprint EFBlkOverprintDEF/Printer's default: ""
*EFBlkOverprint False/Off: " userdict /EFIColordict known {
        userdict /EFIColordict get /DisableBlackOverprint known {
           userdict /EFIColordict get /DisableBlackOverprint get exec
        } if } if "
*End
*EFBlkOverprint True/On: " userdict /EFIColordict known {
        userdict /EFIColordict get /EnableBlackOverprint known {
           userdict /EFIColordict get /EnableBlackOverprint get exec
        } if } if "
*End
*CloseUI: *EFBlkOverprint


*%EFIFlags *EFSpotColors Spooler|Command|Rerip|ColorSetup
*%EFIGroup *EFSpotColors  Color/Color
*OpenUI *EFSpotColors/Spot Color Matching :PickOne
*OrderDependency: 61.0 AnySetup *EFSpotColors
*DefaultEFSpotColors: EFSpotColorsDEF
*EFSpotColors EFSpotColorsDEF/Printer's default: ""
*EFSpotColors False/Off: " userdict /EFIColordict known {
        userdict /EFIColordict get /DisableSpotColorMatching known {
           userdict /EFIColordict get /DisableSpotColorMatching get exec
        } if } if "
*End
*EFSpotColors True/On: " userdict /EFIColordict known {
        userdict /EFIColordict get /EnableSpotColorMatching known {
           userdict /EFIColordict get /EnableSpotColorMatching get exec
        } if } if "
*End
*CloseUI: *EFSpotColors

*% ColorWise body ends here

*%EFIFlags *EFRaster Command|Column|Rerip
*%EFIGroup *EFRaster  Job/Job
*OpenUI *EFRaster/Save Fast Reprint : Boolean
*OrderDependency: 65.0 AnySetup *EFRaster
*DefaultEFRaster: False
*EFRaster True/On: " userdict /XJXsetraster known
    { 1 XJXsetraster }
    if "
*End
*EFRaster False/Off: " userdict /XJXsetraster known
    { 0 XJXsetraster }
    if "
*End
*CloseUI: *EFRaster


*%EFIFlags *EFHPBlack Spooler|Command|Rerip
*%EFIGroup *EFHPBlack Job/Job
*OpenUI *EFHPBlack/Black Detection : Boolean
*OrderDependency: 40.0 AnySetup *EFHPBlack
*DefaultEFHPBlack: True
*EFHPBlack False/Off: " userdict /XJXsethpblack known
              { 0 XJXsethpblack }
              if "
*End
*EFHPBlack True/On: " userdict /XJXsethpblack known
              { 1 XJXsethpblack }
              if "
*End
*CloseUI: *EFHPBlack


*DefaultTransfer: Null
*Transfer Null: "{ }"
*Transfer Null.Inverse: "{ 1 exch sub }"

*% PPD pages begins

*% Paper Handling ===================
*% Use these entries to set paper size most of the time, unless there is
*% specific reason to use PageRegion.

*%EFIFlags *PageSize Command|Column|Rerip
*%EFIGroup *PageSize Media/Media
*OpenUI *PageSize/Page Size :PickOne
*OrderDependency: 90.0 AnySetup *PageSize
*DefaultPageSize: Letter
*PageSize Letter/Letter: " userdict /XJXsetpagesize known
	{ (Letter) XJXsetpagesize }
	{ << /PageSize [612 792] /MediaType null 
            /Policies << /PageSize 7 >> >> setpagedevice
	} ifelse "
*End
*PageSize A4/A4: " userdict /XJXsetpagesize known
	{ (A4) XJXsetpagesize }
	{ << /PageSize [595 842] /MediaType null 
            /Policies << /PageSize 7 >> >> setpagedevice  
	} ifelse "
*End
*PageSize Tabloid/11x17: " userdict /XJXsetpagesize known
	{ (Tabloid) XJXsetpagesize } { 11x17 } ifelse "
*End
*PageSize A3/A3: " userdict /XJXsetpagesize known
	{ (A3) XJXsetpagesize } { a3 } ifelse "
*End
*PageSize TabloidExtra/12x18: " userdict /XJXsetpagesize known
    	{ (TabloidExtra) XJXsetpagesize } { 12x18 } ifelse "
*End
*PageSize Legal/Legal: " userdict /XJXsetpagesize known
	{ (Legal) XJXsetpagesize } { legal } ifelse "
*End
*PageSize Legal13/Legal 13: " userdict /XJXsetpagesize known
	{ (Legal13) XJXsetpagesize } { legal13 } ifelse "
*End
*PageSize ISOB4/ISOB4: " userdict /XJXsetpagesize known
	{ (ISOB4) XJXsetpagesize } { isob4 } ifelse "
*End
*PageSize ISOB5/ISOB5: " userdict /XJXsetpagesize known
	{ (ISOB5) XJXsetpagesize }
	{ << /PageSize [499 709] /MediaType null
            /Policies << /PageSize 7 >> >> setpagedevice
	} ifelse "
*End
*PageSize A6/SEF A6: " userdict /XJXsetpagesize known
	{ (A6) XJXsetpagesize } { SEFA6 } ifelse "
*End
*PageSize SEFLet/SEF Letter: " userdict /XJXsetpagesize known
	{ (LetterSEF) XJXsetpagesize }
	{ << /PageSize [612 792] /MediaType (ShortEdgeFeed) 
            /Policies << /PageSize 7 >> >> setpagedevice
	} ifelse "
*End
*PageSize SEFA4/SEF A4: " userdict /XJXsetpagesize known 
	{ (A4SEF) XJXsetpagesize }
	{ << /PageSize [595 842] /MediaType (ShortEdgeFeed) 
            /Policies << /PageSize 7 >> >> setpagedevice
	} ifelse "
*End
*PageSize SEFISOB5/SEF ISOB5: " userdict /XJXsetpagesize known
	{ (ISOB5SEF) XJXsetpagesize }
	{ << /PageSize [499 709] /MediaType (ShortEdgeFeed)
            /Policies << /PageSize 7 >> >> setpagedevice
	} ifelse "
*End
*PageSize SEF8x10/SEF 8x10: " userdict /XJXsetpagesize known
	{ (EightByTenSEF) XJXsetpagesize }
	{ << /PageSize [576 720] /MediaType (ShortEdgeFeed)
            /Policies << /PageSize 7 >> >> setpagedevice
	} ifelse "
*End
*PageSize 8x10/8x10: " userdict /XJXsetpagesize known
	{ (EightByTen) XJXsetpagesize }
	{ << /PageSize [576 720] /MediaType null 
            /Policies << /PageSize 7 >> >> setpagedevice
	} ifelse "
*End
*PageSize 9x11/SEF 9x11: " userdict /XJXsetpagesize known
	{ (NineByEleven) XJXsetpagesize } { SEF9x11 } ifelse "
*End
*PageSize 9x12/9x12: " userdict /XJXsetpagesize known
	{ (NineByTwelve) XJXsetpagesize } { 9x12 } ifelse "
*End
*PageSize Docupac/SEF Docupac: " userdict /XJXsetpagesize known
	{ (Docupac) XJXsetpagesize } { SEFDocupac } ifelse "
*End
*?PageSize: "  
	save currentpagedevice /PageSize get aload pop
   2 copy gt {exch} if (Unknown) 
   18 dict
   dup [612 792] (Letter) put
   dup [595 842] (A4) put
   dup [792 1224] (Tabloid) put
   dup [842 1191] (A3) put
   dup [864 1296] (TabloidExtra) put
   dup [612 1008] (Legal) put
   dup [612 936] (Legal13) put
   dup [709 1001] (ISOB4) put
   dup [499 709] (ISOB5) put
   dup [297 420] (A6) put
   dup [612 793] (SEFLet) put
   dup [595 843] (SEFA4) put
   dup [499 708] (SEFISOB5) put
   dup [576 721] (SEF8x10) put
   dup [576 720] (8x10) put
   dup [648 792] (9x11) put
   dup [648 864] (9x12) put
   dup [684 842] (Docupac) put
   { exch aload pop 4 index sub abs 5 le exch 5 index sub abs 5 le and
      { exch pop exit } { pop } ifelse
   } bind forall = flush pop pop
   restore"
*End
*CloseUI: *PageSize

*% These entries will set up the frame buffer. Usually used with manual feed.
*%EFIFlags *PageRegion
*OpenUI *PageRegion :PickOne
*OrderDependency: 95.0 AnySetup *PageRegion
*DefaultPageRegion: Letter
*PageRegion Letter/Letter: " userdict /XJXsetpagesize known
	{ (Letter) XJXsetpagesize }
	{ << /PageSize [612 792] /MediaType null 
            /Policies << /PageSize 7 >> >> setpagedevice
	} ifelse "
*End
*PageRegion A4/A4: " userdict /XJXsetpagesize known
	{ (A4) XJXsetpagesize }
	{ << /PageSize [595 842] /MediaType null 
            /Policies << /PageSize 7 >> >> setpagedevice
	} ifelse "
*End
*PageRegion Tabloid/11x17: " userdict /XJXsetpagesize known
	{ (Tabloid) XJXsetpagesize } { 11x17 } ifelse "
*End
*PageRegion A3/A3: " userdict /XJXsetpagesize known
	{ (A3) XJXsetpagesize } { a3 } ifelse "
*End
*PageRegion TabloidExtra/12x18: " userdict /XJXsetpagesize known
    	{ << (TabloidExtra) XJXsetpagesize } { 12x18 } ifelse "
*End
*PageRegion Legal/Legal: " userdict /XJXsetpagesize known
	{ (Legal) XJXsetpagesize } { legal } ifelse "
*End
*PageRegion Legal13/Legal 13: " userdict /XJXsetpagesize known
	{ (Legal13) XJXsetpagesize } { legal13 } ifelse "
*End
*PageRegion ISOB4/ISOB4: " userdict /XJXsetpagesize known
	{ (ISOB4) XJXsetpagesize } { isob4 } ifelse "
*End
*PageRegion ISOB5/ISOB5: " userdict /XJXsetpagesize known
	{ (ISOB5) XJXsetpagesize }
	{ << /PageSize [499 709] /MediaType null
            /Policies << /PageSize 7 >> >> setpagedevice
	} ifelse "
*End
*PageRegion A6/SEF A6: " userdict /XJXsetpagesize known
	{ (A6) XJXsetpagesize } { SEFA6 } ifelse "
*End
*PageRegion SEFLet/SEF Letter: " userdict /XJXsetpagesize known
	{ (LetterSEF) XJXsetpagesize }
	{ << /PageSize [612 792] /MediaType (ShortEdgeFeed) 
            /Policies << /PageSize 7 >> >> setpagedevice
	} ifelse "
*End
*PageRegion SEFA4/SEF A4: " userdict /XJXsetpagesize known 
	{ (A4SEF) XJXsetpagesize }
	{ << /PageSize [595 842] /MediaType (ShortEdgeFeed) 
            /Policies << /PageSize 7 >> >> setpagedevice
	} ifelse "
*End
*PageRegion SEFISOB5/SEF ISOB5: " userdict /XJXsetpagesize known
	{ (ISOB5SEF) XJXsetpagesize }
	{ << /PageSize [499 709] /MediaType (ShortEdgeFeed)
            /Policies << /PageSize 7 >> >> setpagedevice
	} ifelse "
*End
*PageRegion SEF8x10/SEF 8x10: " userdict /XJXsetpagesize known
	{ (SEF8x10) XJXsetpagesize }
	{ << /PageSize [576 720] /MediaType (ShortEdgeFeed)
            /Policies << /PageSize 7 >> >> setpagedevice
	} ifelse "
*End
*PageRegion 8x10/8x10: " userdict /XJXsetpagesize known
	{ (8x10) XJXsetpagesize }
	{ << /PageSize [576 720] /MediaType null 
            /Policies << /PageSize 7 >> >> setpagedevice
	} ifelse "
*End
*PageRegion 9x11/SEF 9x11: " userdict /XJXsetpagesize known
	{ (9x11) XJXsetpagesize } { SEF9x11 } ifelse "
*End
*PageRegion 9x12/9x12: " userdict /XJXsetpagesize known
	{ (9x12) XJXsetpagesize } { 9x12 } ifelse "
*End
*PageRegion Docupac/SEF Docupac: " userdict /XJXsetpagesize known
	{ (Docupac) XJXsetpagesize } { SEFDocupac } ifelse "
*End
*CloseUI: *PageRegion

*DefaultImageableArea: Letter
*ImageableArea Letter/Letter: "2 2 610 790"
*ImageableArea A4/A4: "2 2 593 840"
*ImageableArea Tabloid/11x17: "7 2 785 1222"
*ImageableArea A3/A3: "2 2 840 1189"
*ImageableArea TabloidExtra/12x18: "9 3 855 1293"
*ImageableArea Legal/Legal: "7 2 605 1006"
*ImageableArea Legal13/Legal 13:  "7 2 605 934"
*ImageableArea ISOB4/ISOB4: "7 2 702 999"
*ImageableArea ISOB5/ISOB5: "2 2 497 707"
*ImageableArea A6/SEF A6: "7 2 290 418"
*ImageableArea SEFLet/SEF Letter: "7 2 605 790"
*ImageableArea SEFA4/SEF A4: "7 2 588 840"
*ImageableArea SEFISOB5/SEF ISOB5: "7 2 492 707"
*ImageableArea SEF8x10/SEF 8x10: "7 2 569 718"
*ImageableArea 8x10/8x10: "2 2 574 718"
*ImageableArea 9x11/SEF 9x11: "7 2 641 790"
*ImageableArea 9x12/9x12: "7 2 641 862"
*ImageableArea Docupac/SEF Docupac: "7 2 677 840"
*?ImageableArea: "
 save /cvp { cvi (            ) cvs print ( ) print } bind def
  newpath clippath pathbbox
  4 -2 roll exch 2 {ceiling cvp} repeat
  exch 2 {floor cvp} repeat flush
 restore
"
*End

*% These provide the physical dimensions of the paper (by keyword)
*DefaultPaperDimension: Letter
*PaperDimension Letter/Letter: "612 792"
*PaperDimension A4/A4: "595 842"
*PaperDimension Tabloid/11x17: "792 1224"
*PaperDimension A3/A3: "842 1191"
*PaperDimension TabloidExtra/12x18: "864 1296"
*PaperDimension Legal/Legal: "612 1008"
*PaperDimension Legal13/Legal 13: "612 936"
*PaperDimension ISOB4/ISOB4: "709 1001"
*PaperDimension ISOB5/ISOB5: "499 709"
*PaperDimension A6/SEF A6: "297 420"
*PaperDimension SEFLet/SEF Letter: "612 793"
*PaperDimension SEFA4/SEF A4: "595 843"
*PaperDimension SEFISOB5/SEF ISOB5: "499 708"
*PaperDimension SEF8x10/SEF 8x10: "576 721"
*PaperDimension 8x10/8x10: "576 720"
*PaperDimension 9x11/SEF 9x11: "648 792"
*PaperDimension 9x12/9x12: "648 864"
*PaperDimension Docupac/SEF Docupac: "684 842"

*% Custom Page Sizes
*CustomPageSize True: "
        pop pop pop 2 dict begin
            2 array astore /PageSize exch def
            /ImagingBBox null def
	    currentdict
        end setpagedevice"
*End
*ParamCustomPageSize Width: 1 points 0 864
*ParamCustomPageSize Height: 2 points 0 1296
*ParamCustomPageSize WidthOffset: 3 points 0 0
*ParamCustomPageSize HeightOffset: 4 points 0 0
*ParamCustomPageSize Orientation: 5 int 0 0
*MaxMediaWidth: "864"
*MaxMediaHeight: "1296"
*HWMargins: 0 0 0 0

*% PPD pages ends

*RequiresPageRegion All: True

*%EFIFlags *InputSlot Command|Spooler|Column
*%EFIGroup *InputSlot  Media/Media
*OpenUI *InputSlot/Paper Source : PickOne
*OrderDependency: 20.0 AnySetup *InputSlot
*DefaultInputSlot: AutoSelect
*InputSlot AutoSelect/Auto Select: " userdict /XJXsettraysel known
	{ -1 XJXsettraysel }
	if "
*End
*InputSlot Tray1/Tray 1: " userdict /XJXsettraysel known
	{ 1 XJXsettraysel }
	if "
*End
*InputSlot Tray2/Tray 2: " userdict /XJXsettraysel known
	{ 2 XJXsettraysel }
	if "
*End
*InputSlot Tray3/Tray 3: " userdict /XJXsettraysel known
	{ 3 XJXsettraysel }
	if "
*End
*InputSlot TrayManual/Bypass Tray: " userdict /XJXsettraysel known
	{ 4 XJXsettraysel }
	if "
*End
*CloseUI: *InputSlot


*% Font Information =========================
*DefaultFont: Courier
*Font AlbertusMT: Standard "(001.000)" Standard Disk
*Font AlbertusMT-Italic: Standard "(001.000)" Standard Disk
*Font AlbertusMT-Light: Standard "(001.000)" Standard Disk
*Font AntiqueOlive-Bold: Standard "(001.001)" Standard Disk
*Font AntiqueOlive-Compact: Standard "(001.001)" Standard Disk
*Font AntiqueOlive-Italic: Standard "(001.001)" Standard Disk
*Font AntiqueOlive-Roman: Standard "(001.001)" Standard Disk
*Font Apple-Chancery: Standard "(002.000)" Standard Disk
*Font Arial-BoldItalicMT: Standard "(002.000)" Standard Disk 
*Font Arial-BoldMT: Standard "(002.000)" Standard Disk
*Font Arial-ItalicMT: Standard "(002.000)" Standard Disk
*Font ArialMT: Standard "(002.000)" Standard Disk
*Font AvantGarde-Book: Standard "(002.000)" Standard Disk
*Font AvantGarde-BookOblique: Standard "(002.000)" Standard Disk
*Font AvantGarde-Demi: Standard "(002.000)" Standard Disk
*Font AvantGarde-DemiOblique: Standard "(002.000)" Standard Disk
*Font Bodoni: Standard "(001.002)" Standard Disk
*Font Bodoni-Bold: Standard "(001.002)" Standard Disk
*Font Bodoni-BoldItalic: Standard "(001.002)" Standard Disk
*Font Bodoni-Italic: Standard "(001.002)" Standard Disk
*Font Bodoni-Poster: Standard "(001.002)" Standard Disk
*Font Bodoni-PosterCompressed: Standard "(001.001)" Standard Disk
*Font Bookman-Demi: Standard "(002.000)" Standard Disk
*Font Bookman-DemiItalic: Standard "(002.000)" Standard Disk
*Font Bookman-Light: Standard "(002.000)" Standard Disk
*Font Bookman-LightItalic: Standard "(002.000)" Standard Disk
*Font Carta: Standard "(001.001)" Standard Disk
*Font Chicago: Standard "(002.000)" Standard Disk
*Font Clarendon: Standard "(001.001)" Standard Disk
*Font Clarendon-Bold: Standard "(001.001)" Standard Disk
*Font Clarendon-Light: Standard "(001.001)" Standard Disk
*Font CooperBlack: Standard "(001.003)" Standard Disk
*Font CooperBlack-Italic: Standard "(001.003)" Standard Disk
*Font Copperplate-ThirtyThreeBC: Standard "(001.002)" Standard Disk
*Font Copperplate-ThirtyTwoBC: Standard "(001.002)" Standard Disk
*Font Coronet-Regular: Standard "(001.000)" Standard Disk
*Font Courier: Standard "(003.000)" Standard Disk
*Font Courier-Bold: Standard "(003.000)" Standard Disk
*Font Courier-BoldOblique: Standard "(003.000)" Standard Disk
*Font Courier-Oblique: Standard "(003.000)" Standard Disk
*Font Eurostile: Standard "(001.002)" Standard Disk
*Font Eurostile-Bold: Standard "(001.001)" Standard Disk
*Font Eurostile-BoldExtendedTwo: Standard "(001.002)" Standard Disk
*Font Eurostile-ExtendedTwo: Standard "(001.002)" Standard Disk
*Font Geneva: Standard "(002.000)" Standard Disk
*Font GillSans: Standard "(001.002)" Standard Disk
*Font GillSans-Bold: Standard "(001.001)" Standard Disk
*Font GillSans-BoldCondensed: Standard "(001.001)" Standard Disk
*Font GillSans-BoldItalic: Standard "(001.002)" Standard Disk
*Font GillSans-Condensed: Standard "(001.001)" Standard Disk
*Font GillSans-ExtraBold: Standard "(001.001)" Standard Disk
*Font GillSans-Italic: Standard "(001.002)" Standard Disk
*Font GillSans-Light: Standard "(001.001)" Standard Disk
*Font GillSans-LightItalic: Standard "(001.002)" Standard Disk
*Font Goudy: Standard "(001.003)" Standard Disk
*Font Goudy-Bold: Standard "(001.002)" Standard Disk
*Font Goudy-BoldItalic: Standard "(001.002)" Standard Disk
*Font Goudy-ExtraBold: Standard "(001.001)" Standard Disk
*Font Goudy-Italic: Standard "(001.002)" Standard Disk
*Font Helvetica: Standard "(002.000)" Standard Disk
*Font Helvetica-Bold: Standard "(002.000)" Standard Disk
*Font Helvetica-BoldOblique: Standard "(002.000)" Standard Disk
*Font Helvetica-Condensed: Standard "(002.000)" Standard Disk
*Font Helvetica-Condensed-Bold: Standard "(002.000)" Standard Disk
*Font Helvetica-Condensed-BoldObl: Standard "(002.000)" Standard Disk
*Font Helvetica-Condensed-Oblique: Standard "(002.000)" Standard Disk
*Font Helvetica-Narrow: Standard "(002.000)" Standard Disk
*Font Helvetica-Narrow-Bold: Standard "(002.000)" Standard Disk
*Font Helvetica-Narrow-BoldOblique: Standard "(002.000)" Standard Disk
*Font Helvetica-Narrow-Oblique: Standard "(002.000)" Standard Disk
*Font Helvetica-Oblique: Standard "(002.000)" Standard Disk
*Font HoeflerText-Black: Standard "(002.000)" Standard Disk
*Font HoeflerText-BlackItalic: Standard "(002.000)" Standard Disk
*Font HoeflerText-Italic: Standard "(002.000)" Standard Disk
*Font HoeflerText-Ornaments: Standard "(002.000)" Standard Disk
*Font HoeflerText-Regular: Standard "(002.000)" Standard Disk
*Font JoannaMT: Standard "(001.000)" Standard Disk
*Font JoannaMT-Bold: Standard "(001.000)" Standard Disk
*Font JoannaMT-BoldItalic: Standard "(001.000)" Standard Disk
*Font JoannaMT-Italic: Standard "(001.000)" Standard Disk
*Font LetterGothic: Standard "(001.004)" Standard Disk
*Font LetterGothic-Bold: Standard "(001.006)" Standard Disk
*Font LetterGothic-BoldSlanted: Standard "(001.005)" Standard Disk
*Font LetterGothic-Slanted: Standard "(001.004)" Standard Disk
*Font LubalinGraph-Book: Standard "(001.002)" Standard Disk
*Font LubalinGraph-BookOblique: Standard "(001.002)" Standard Disk
*Font LubalinGraph-Demi: Standard "(001.002)" Standard Disk
*Font LubalinGraph-DemiOblique: Standard "(001.002)" Standard Disk
*Font Marigold: Standard "(001.000)" Standard Disk
*Font Monaco: Standard "(002.000)" Standard Disk
*Font MonaLisa-Recut: Standard "(001.000)" Standard Disk
*Font NewCenturySchlbk-Bold: Standard "(002.000)" Standard Disk
*Font NewCenturySchlbk-BoldItalic: Standard "(002.000)" Standard Disk
*Font NewCenturySchlbk-Italic: Standard "(002.000)" Standard Disk
*Font NewCenturySchlbk-Roman: Standard "(002.000)" Standard Disk
*Font NewYork: Standard "(002.000)" Standard Disk
*Font Optima: Standard "(001.005)" Standard Disk
*Font Optima-Bold: Standard "(001.005)" Standard Disk
*Font Optima-BoldItalic: Standard "(001.000)" Standard Disk
*Font Optima-Italic: Standard "(001.000)" Standard Disk
*Font Oxford: Standard "(001.000)" Standard Disk
*Font Palatino-Bold: Standard "(002.000)" Standard Disk
*Font Palatino-BoldItalic: Standard "(002.000)" Standard Disk
*Font Palatino-Italic: Standard "(002.000)" Standard Disk
*Font Palatino-Roman: Standard "(002.000)" Standard Disk
*Font StempelGaramond-Bold: Standard "(001.002)" Standard Disk
*Font StempelGaramond-BoldItalic: Standard "(001.002)" Standard Disk
*Font StempelGaramond-Italic: Standard "(001.002)" Standard Disk
*Font StempelGaramond-Roman: Standard "(001.002)" Standard Disk
*Font Symbol: Standard "(001.008)" Standard Disk
*Font Tekton: Standard "(001.001)" Standard Disk
*Font Times-Bold: Standard "(002.000)" Standard Disk
*Font Times-BoldItalic: Standard "(002.000)" Standard Disk
*Font Times-Italic: Standard "(002.000)" Standard Disk
*Font Times-Roman: Standard "(002.000)" Standard Disk
*Font TimesNewRomanPS-BoldItalicMT: Standard "(002.000)" Standard Disk
*Font TimesNewRomanPS-BoldMT: Standard "(002.000)" Standard Disk
*Font TimesNewRomanPS-ItalicMT: Standard "(002.000)" Standard Disk
*Font TimesNewRomanPSMT: Standard "(002.000)" Standard Disk
*Font Univers: Standard "(001.003)" Standard Disk
*Font Univers-Bold: Standard "(001.003)" Standard Disk
*Font Univers-BoldExt: Standard "(001.000)" Standard Disk
*Font Univers-BoldExtObl: Standard "(001.000)" Standard Disk
*Font Univers-BoldOblique: Standard "(001.003)" Standard Disk
*Font Univers-Condensed: Standard "(001.002)" Standard Disk
*Font Univers-CondensedBold: Standard "(001.001)" Standard Disk
*Font Univers-CondensedBoldOblique: Standard "(001.001)" Standard Disk
*Font Univers-CondensedOblique: Standard "(001.002)" Standard Disk
*Font Univers-Extended: Standard "(001.000)" Standard Disk
*Font Univers-ExtendedObl: Standard "(001.000)" Standard Disk
*Font Univers-Light: Standard "(001.003)" Standard Disk
*Font Univers-LightOblique: Standard "(001.003)" Standard Disk
*Font Univers-Oblique: Standard "(001.003)" Standard Disk
*Font Wingdings-Regular: Standard "(002.000)" Standard Disk
*Font ZapfChancery-MediumItalic: Standard "(002.000)" Standard Disk
*Font ZapfDingbats: Standard "(002.000)" Standard Disk
*?FontQuery: "
   save  
   { count 1 gt
      { exch dup 127 string cvs (/) print print (:) print
       /Font resourcestatus {pop pop (Yes)} {(No)} ifelse = 
      } { exit } ifelse
   } bind loop
   (*) = flush
   restore"
*End

*?FontList: "
   save (*) {cvn ==} 128 string /Font resourceforall
   (*) = flush restore"
*End

*% Printer Messages (verbatim from printer):
*Message: "%%[ exitserver: permanent state may be changed ]%%"
*Message: "%%[ Flushing: rest of job (to end-of-file) will be ignored ]%%"
*Message: "\FontName\ not found, using Courier"

*% Status (format: %%[ status: <one of these> ]%% )
*Status: "idle"
*Status: "busy"
*Status: "waiting"
*Status: "printing"
*Status: "scanning"

*Status: "PrinterError: Ok"
*Status: "PrinterError: Reset the copier and fiery"
*Status: "PrinterError: Copier is busy (Copier mode)"
*Status: "PrinterError: Copier is busy (AGOC)"
*Status: "PrinterError: Copier is busy (FUSER)"
*Status: "PrinterError: Copier is busy (ROS)"
*Status: "PrinterError: Copier is busy (DRUM HEATER)"
*Status: "PrinterError: Copier is busy (MC)"
*Status: "PrinterError: Paper jam"
*Status: "PrinterError: Copier's interlock is open"
*Status: "PrinterError: Out of toner"
*Status: "PrinterError: Fuser web empty"
*Status: "PrinterError: Waste toner container is full"
*Status: "PrinterError: Copier's accessary is disabled"

*Status: "PrinterError: Load A3 paper in tray"
*Status: "PrinterError: Load A4 paper in tray"
*Status: "PrinterError: Load A4 SEF paper in tray"
*Status: "PrinterError: Load 11x17 paper in tray"
*Status: "PrinterError: Load Letter paper in tray"
*Status: "PrinterError: Load Letter SEF paper in tray"
*Status: "PrinterError: Load Legal paper in tray"
*Status: "PrinterError: Load 8x10 paper in tray"
*Status: "PrinterError: Load Legal 13 paper in tray"
*Status: "PrinterError: Load 9x12 paper in tray"

*Status: "PrinterError: An unknown copier error occurred"
*Status: "PrinterError: Copier is offline"

*Status: "PrinterError: Load A3 paper in bypass tray"
*Status: "PrinterError: Load A4 paper bypass tray"
*Status: "PrinterError: Load A4 SEF paper bypass tray"
*Status: "PrinterError: Load 11x17 paper bypass tray"
*Status: "PrinterError: Load Letter paper bypass tray"
*Status: "PrinterError: Load Letter SEF paper bypass tray"
*Status: "PrinterError: Load Legal paper bypass tray"
*Status: "PrinterError: Load 8x10 paper bypass tray"
*Status: "PrinterError: Load Legal 13 paper bypass tray"
*Status: "PrinterError: Load 9x12 paper bypass tray"

*Status: "PrinterError: Copier is busy (UI)"


*% Input Sources (format: %%[ status: <stat>; source: <one of these> ]%% )
*Source: "EtherTalk"
*Source: "Parallel"
*Source: "TCP/IP"
*Source: "Novell IPX"

*% Printer Error (format: %%[ PrinterError: <one of these> ]%%)

*PrinterError: "Ok"
*PrinterError: "Reset the copier and fiery"
*PrinterError: "Copier is busy (Copier mode)"
*PrinterError: "Copier is busy (AGOC)"
*PrinterError: "Copier is busy (FUSER)"
*PrinterError: "Copier is busy (ROS)"
*PrinterError: "Copier is busy (DRUM HEATER)"
*PrinterError: "Copier is busy (MC)"
*PrinterError: "Paper jam"
*PrinterError: "Copier's interlock is open"
*PrinterError: "Out of toner"
*PrinterError: "Fuser web empty"
*PrinterError: "Waste toner container is full"
*PrinterError: "Copier's accessary is disabled"

*PrinterError: "Load A3 paper in tray"
*PrinterError: "Load A4 paper in tray"
*PrinterError: "Load A4 SEF paper in tray"
*PrinterError: "Load 11x17 paper in tray"
*PrinterError: "Load Letter paper in tray"
*PrinterError: "Load Letter SEF paper in tray"
*PrinterError: "Load Legal paper in tray"
*PrinterError: "Load 8x10 paper in tray"
*PrinterError: "Load Legal 13 paper in tray"
*PrinterError: "Load 9x12 paper in tray"

*PrinterError: "An unknown copier error occurred"
*PrinterError: "Copier is offline"

*PrinterError: "Load A3 paper in bypass tray"
*PrinterError: "Load A4 paper bypass tray"
*PrinterError: "Load A4 SEF paper bypass tray"
*PrinterError: "Load 11x17 paper bypass tray"
*PrinterError: "Load Letter paper bypass tray"
*PrinterError: "Load Letter SEF paper bypass tray"
*PrinterError: "Load Legal paper bypass tray"
*PrinterError: "Load 8x10 paper bypass tray"
*PrinterError: "Load Legal 13 paper bypass tray"
*PrinterError: "Load 9x12 paper bypass tray"

*PrinterError: "Copier is busy (UI)"


*% Color Separation Information ====================


*% Custom Inks for Fiery Logo
*InkName: P300FieryBlue/Fiery Blue
*InkName: P199FieryRed/Fiery Red
*InkName: PblackFieryBlack/Fiery Black
*CustomCMYK P300FieryBlue: ".9 .9 .0 .0"
*CustomCMYK P199FieryRed: ".0 .9 .9 .0"
*CustomCMYK PblackFieryBlack: ".2 .1 .1 .9"

*DefaultColorSep: Black.100lpi.400dpi

*% -------Halftone Graphics Mode (Hi-Res mode)
*ColorSepScreenAngle Cyan.100lpi.400dpi: "0"
*ColorSepScreenAngle Magenta.100lpi.400dpi: "0"
*ColorSepScreenAngle Yellow.100lpi.400dpi: "0"
*ColorSepScreenAngle Black.100lpi.400dpi: "0"
*ColorSepScreenFreq Cyan.100lpi.400dpi: "50.0"
*ColorSepScreenFreq Magenta.100lpi.400dpi: "50.0"
*ColorSepScreenFreq Yellow.100lpi.400dpi: "50.0"
*ColorSepScreenFreq Black.100lpi.400dpi: "50.0"
*ColorSepScreenProc Cyan.100lpi.400dpi: "{6 5 
	{ 3 1 roll 4 -1 roll exch 
	{dup 8  ge { 8 sub} if exch 
	dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if 	 
	1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
	dup 0 lt {0 exch sub} if  cvi
	}
	exec 8 mul 3 1 roll exch 
	{dup 8  ge { 8 sub} if exch 
	dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if 	 
	1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
	dup 0 lt {0 exch sub} if  cvi
	}			
	exec add
	[
	48 18  8 16   46 16  6 14
	56 60 32 24   54 58 30 22
	 4 12 44 40    2 10 42 38
	28 20 52 64   26 18 50 62
	
	45 15  5 13   47 17  7 15
	53 57 29 21   55 59 31 23
	 1  9 41 37    3 11 43 39
	25 17 49 61   27 19 51 63
	] 
	exch get 8 dup mul div} exec}" 
*End

*ColorSepScreenProc Magenta.100lpi.400dpi: "{4 7 
	{ 3 1 roll 4 -1 roll exch 
	{dup 8  ge { 8 sub} if exch 
	dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if 	 
	1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
	dup 0 lt {0 exch sub} if  cvi
	}
	exec 8 mul 3 1 roll exch 
	{dup 8  ge { 8 sub} if exch 
	dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if 	 
	1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
	dup 0 lt {0 exch sub} if  cvi
	}			
	exec add
	[
	48 18  8 16   46 16  6 14
	56 60 32 24   54 58 30 22
	 4 12 44 40    2 10 42 38
	28 20 52 64   26 18 50 62
	
	45 15  5 13   47 17  7 15
	53 57 29 21   55 59 31 23
	 1  9 41 37    3 11 43 39
	25 17 49 61   27 19 51 63
	] 
	exch get 8 dup mul div} exec}"
*End

*ColorSepScreenProc Yellow.100lpi.400dpi: "{5 2
	{ 3 1 roll 4 -1 roll exch 
	{dup 8  ge { 8 sub} if exch 
	dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if 	 
	1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
	dup 0 lt {0 exch sub} if  cvi
	}
	exec 8 mul 3 1 roll exch 
	{dup 8  ge { 8 sub} if exch 
	dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if 	 
	1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
	dup 0 lt {0 exch sub} if  cvi
	}			
	exec add
	[
	48 18  8 16   46 16  6 14
	56 60 32 24   54 58 30 22
	 4 12 44 40    2 10 42 38
	28 20 52 64   26 18 50 62
	
	45 15  5 13   47 17  7 15
	53 57 29 21   55 59 31 23
	 1  9 41 37    3 11 43 39
	25 17 49 61   27 19 51 63
	] 
	exch get 8 dup mul div} exec}"
*End

*ColorSepScreenProc Black.100lpi.400dpi: "{2 4 
	{ 3 1 roll 4 -1 roll exch 
	{dup 8  ge { 8 sub} if exch 
	dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if 	 
	1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
	dup 0 lt {0 exch sub} if  cvi
	}
	exec 8 mul 3 1 roll exch 
	{dup 8  ge { 8 sub} if exch 
	dup -1.0 le {pop -1.0} if dup 0.97 gt {pop 0.97} if 	 
	1.0 add 8 2 div  mul add dup 8 ge {8 sub} if
	dup 0 lt {0 exch sub} if  cvi
	}			
	exec add
	[
	48 18  8 16   46 16  6 14
	56 60 32 24   54 58 30 22
	 4 12 44 40    2 10 42 38
	28 20 52 64   26 18 50 62
	
	45 15  5 13   47 17  7 15
	53 57 29 21   55 59 31 23
	 1  9 41 37    3 11 43 39
	25 17 49 61   27 19 51 63
	] 
	exch get 8 dup mul div} exec}"
*End

*% PPD Last Modified 2.13.98
*% End of PPD file
*% The byte count of this file should be exactly 077509 or 079485
*% depending on the filesystem it resides in.
*% end of PPD file for Fiery ZX DocuColor 40 
